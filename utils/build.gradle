apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //RXJava
    api "io.reactivex.rxjava2:rxjava:$rxJavaVer"
    //RXAndroid
    api "io.reactivex.rxjava2:rxandroid:$rxAndroidVer"

    //androidx
    api "androidx.appcompat:appcompat:$androidx_appcompat"
    api "androidx.core:core-ktx:$androidx_core"
    api "androidx.constraintlayout:constraintlayout:$androidx_constraintLayout"

    //androidx RecyclerView
    api "androidx.recyclerview:recyclerview:$rvVer"
    // For control over item selection of both touch and mouse driven selection
    api "androidx.recyclerview:recyclerview-selection:$rvSelectionVer"


    //Glide
    api "com.github.bumptech.glide:glide:$glideVer"
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVer"

    //Glide Transformation
    api "jp.wasabeef:glide-transformations:$glideTranVer"
    // If you want to use the GPU Filters
    api "jp.co.cyberagent.android:gpuimage:$gpuimageVer"
}
